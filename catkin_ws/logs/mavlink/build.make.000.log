[35m[1mScanning dependencies of target matrixpilot.xml-v1.0[0m
[35m[1mScanning dependencies of target uAvionix.xml-v1.0[0m
[35m[1mScanning dependencies of target ardupilotmega.xml-v1.0[0m
[35m[1mScanning dependencies of target slugs.xml-v2.0[0m
[35m[1mScanning dependencies of target standard.xml-v1.0[0m
[35m[1mScanning dependencies of target standard.xml-v2.0[0m
[35m[1mScanning dependencies of target uAvionix.xml-v2.0[0m
[  5%] [34m[1mGenerating include/v1.0/matrixpilot/matrixpilot.h[0m
[ 10%] [34m[1mGenerating include/v1.0/uAvionix/uAvionix.h[0m
[ 20%] [34m[1mGenerating slugs-v2.0-cxx-stamp[0m
[ 20%] [34m[1mGenerating include/v1.0/ardupilotmega/ardupilotmega.h[0m
[ 25%] [34m[1mGenerating include/v1.0/standard/standard.h[0m
[ 30%] [34m[1mGenerating standard-v2.0-cxx-stamp[0m
[ 35%] [34m[1mGenerating uAvionix-v2.0-cxx-stamp[0m
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ardupilotmega.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/matrixpilot.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/slugs.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/matrixpilot.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/slugs.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/standard.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ardupilotmega.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/standard.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/standard.xml
Note: message FLEXIFUNCTION_BUFFER_FUNCTION is longer than 64 bytes long (66 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Ignoring MAVLink2 message UAVIONIX_ADSB_OUT_CFG
Ignoring MAVLink2 message UAVIONIX_ADSB_OUT_DYNAMIC
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/standard.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message SERIAL_UDB_EXTRA_F2_A is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Note: message SERIAL_UDB_EXTRA_F2_B is longer than 64 bytes long (116 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Ignoring MAVLink2 message UAVIONIX_ADSB_TRANSCEIVER_HEALTH_REPORT
Note: message SERIAL_UDB_EXTRA_F15 is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 0 MAVLink message types in 1 XML files
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Note: message SERIAL_UDB_EXTRA_F16 is longer than 64 bytes long (118 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v1.0/uAvionix
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Found 3 MAVLink message types in 1 XML files
Copying fixed headers for protocol 1.0 to include/v1.0
Generating C headers
Generating C implementation in directory include/v2.0/uAvionix
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Ignoring MAVLink2 message DEVICE_OP_READ
Ignoring MAVLink2 message DEVICE_OP_READ_REPLY
Ignoring MAVLink2 message DEVICE_OP_WRITE
Ignoring MAVLink2 message DEVICE_OP_WRITE_REPLY
Ignoring MAVLink2 message ADAP_TUNING
Ignoring MAVLink2 message VISION_POSITION_DELTA
Ignoring MAVLink2 message AOA_SSA
Copying fixed headers for protocol 2.0 to include/v2.0
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Generating C++ implementation in directory include/v2.0/uAvionix
Note: message DATA64 is longer than 64 bytes long (74 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message DATA96 is longer than 64 bytes long (106 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message REMOTE_LOG_DATA_BLOCK is longer than 64 bytes long (214 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Copying fixed C++ headers for protocol 2.0 to include/v2.0
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[ 35%] Built target uAvionix.xml-v1.0
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[ 35%] Built target uAvionix.xml-v2.0
[35m[1mScanning dependencies of target ardupilotmega.xml-v2.0[0m
[ 40%] [34m[1mGenerating ardupilotmega-v2.0-cxx-stamp[0m
[35m[1mScanning dependencies of target ASLUAV.xml-v2.0[0m
[ 45%] [34m[1mGenerating ASLUAV-v2.0-cxx-stamp[0m
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 138 MAVLink message types in 2 XML files
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v1.0/standard
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v1.0/common
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 163 MAVLink message types in 2 XML files
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C headers
Generating C implementation in directory include/v2.0/standard
Merged enum MAV_CMD
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v2.0/common
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 165 MAVLink message types in 2 XML files
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v1.0/matrixpilot
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 183 MAVLink message types in 2 XML files
Generating C headers
Generating C implementation in directory include/v2.0/slugs
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Ignoring MAVLink2 message UAVIONIX_ADSB_OUT_CFG
Ignoring MAVLink2 message UAVIONIX_ADSB_OUT_DYNAMIC
Ignoring MAVLink2 message UAVIONIX_ADSB_TRANSCEIVER_HEALTH_REPORT
Merged enum MAV_CMD
Found 188 MAVLink message types in 3 XML files
Generating C implementation in directory include/v1.0/ardupilotmega
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ardupilotmega.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ardupilotmega.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ASLUAV.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ASLUAV.xml
Generating C implementation in directory include/v2.0/common
Note: message ASLCTRL_DATA is longer than 64 bytes long (106 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FW_SOARING_DATA is longer than 64 bytes long (110 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message DATA64 is longer than 64 bytes long (74 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message DATA96 is longer than 64 bytes long (106 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message REMOTE_LOG_DATA_BLOCK is longer than 64 bytes long (214 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message DEVICE_OP_READ_REPLY is longer than 64 bytes long (143 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message DEVICE_OP_WRITE is longer than 64 bytes long (187 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Generating C implementation in directory include/v1.0/common
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Generating C implementation in directory include/v1.0/common
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 175 MAVLink message types in 2 XML files
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C headers
Generating C implementation in directory include/v2.0/ASLUAV
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/uAvionix.xml
Merged enum MAV_CMD
Found 223 MAVLink message types in 3 XML files
Generating C headers
Generating C implementation in directory include/v2.0/ardupilotmega
Generating C implementation in directory include/v2.0/common
Copying fixed headers for protocol 1.0 to include/v1.0
Generating C implementation in directory include/v2.0/common
[ 45%] Built target standard.xml-v1.0
[35m[1mScanning dependencies of target paparazzi.xml-v2.0[0m
[ 50%] [34m[1mGenerating paparazzi-v2.0-cxx-stamp[0m
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/standard
Generating C++ implementation in directory include/v2.0/common
Copying fixed headers for protocol 1.0 to include/v1.0
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/slugs
[ 50%] Built target matrixpilot.xml-v1.0
[35m[1mScanning dependencies of target autoquad.xml-v2.0[0m
Generating C++ implementation in directory include/v2.0/common
[ 55%] [34m[1mGenerating autoquad-v2.0-cxx-stamp[0m
Generating C implementation in directory include/v1.0/uAvionix
Copying fixed headers for protocol 1.0 to include/v1.0
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/paparazzi.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/paparazzi.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[ 55%] Built target ardupilotmega.xml-v1.0
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[35m[1mScanning dependencies of target matrixpilot.xml-v2.0[0m
Copying fixed C++ headers for protocol 2.0 to include/v2.0
[ 60%] [34m[1mGenerating matrixpilot-v2.0-cxx-stamp[0m
[ 60%] Built target standard.xml-v2.0
[35m[1mScanning dependencies of target ualberta.xml-v2.0[0m
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/autoquad.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/autoquad.xml
Copying fixed C++ headers for protocol 2.0 to include/v2.0
[ 65%] [34m[1mGenerating ualberta-v2.0-cxx-stamp[0m
Note: message AQ_TELEMETRY_F is longer than 64 bytes long (90 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[ 65%] Built target slugs.xml-v2.0
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[35m[1mScanning dependencies of target paparazzi.xml-v1.0[0m
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[ 70%] [34m[1mGenerating include/v1.0/paparazzi/paparazzi.h[0m
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 168 MAVLink message types in 2 XML files
Generating C headers
Generating C implementation in directory include/v2.0/paparazzi
Generating C implementation in directory include/v2.0/common
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/matrixpilot.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/matrixpilot.xml
Note: message FLEXIFUNCTION_BUFFER_FUNCTION is longer than 64 bytes long (66 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_UDB_EXTRA_F2_A is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_UDB_EXTRA_F2_B is longer than 64 bytes long (116 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_UDB_EXTRA_F15 is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_UDB_EXTRA_F16 is longer than 64 bytes long (118 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Copying fixed headers for protocol 2.0 to include/v2.0
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C++ implementation in directory include/v2.0/ASLUAV
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ualberta.xml
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ualberta.xml
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C++ implementation in directory include/v2.0/common
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Merged enum MAV_DATA_STREAM
Note: An enum value was auto-generated: AQ_MAVLINK_DEFS_VERSION_1 = 1
Note: An enum value was auto-generated: MAV_DATA_STREAM_PROPULSION = 13
Found 165 MAVLink message types in 2 XML files
Generating C headers
Generating C implementation in directory include/v2.0/autoquad
Generating C implementation in directory include/v2.0/common
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/paparazzi.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/paparazzi.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C implementation in directory include/v2.0/uAvionix
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Copying fixed headers for protocol 2.0 to include/v2.0
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C++ implementation in directory include/v2.0/ardupilotmega
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 190 MAVLink message types in 2 XML files
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C headers
Generating C implementation in directory include/v2.0/matrixpilot
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: An enum value was auto-generated: MODE_MANUAL_DIRECT = 1
Note: An enum value was auto-generated: MODE_MANUAL_SCALED = 2
Note: An enum value was auto-generated: MODE_AUTO_PID_ATT = 3
Note: An enum value was auto-generated: MODE_AUTO_PID_VEL = 4
Note: An enum value was auto-generated: MODE_AUTO_PID_POS = 5
Note: An enum value was auto-generated: NAV_AHRS_INIT = 1
Note: An enum value was auto-generated: NAV_AHRS = 2
Note: An enum value was auto-generated: NAV_INS_GPS_INIT = 3
Note: An enum value was auto-generated: NAV_INS_GPS = 4
Note: An enum value was auto-generated: PILOT_MANUAL = 1
Note: An enum value was auto-generated: PILOT_AUTO = 2
Note: An enum value was auto-generated: PILOT_ROTO = 3
Found 166 MAVLink message types in 2 XML files
Generating C headers
Generating C implementation in directory include/v2.0/ualberta
Generating C++ implementation in directory include/v2.0/common
Copying fixed C++ headers for protocol 2.0 to include/v2.0
Generating C implementation in directory include/v2.0/common
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[ 70%] Built target ASLUAV.xml-v2.0
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[35m[1mScanning dependencies of target slugs.xml-v1.0[0m
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[ 75%] [34m[1mGenerating include/v1.0/slugs/slugs.h[0m
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 143 MAVLink message types in 2 XML files
Generating C implementation in directory include/v1.0/paparazzi
Generating C implementation in directory include/v1.0/common
Generating C implementation in directory include/v2.0/common
Generating C++ implementation in directory include/v2.0/uAvionix
Copying fixed C++ headers for protocol 2.0 to include/v2.0
[ 75%] Built target ardupilotmega.xml-v2.0
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/slugs.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/slugs.xml
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[35m[1mScanning dependencies of target ASLUAV.xml-v1.0[0m
[ 80%] [34m[1mGenerating include/v1.0/ASLUAV/ASLUAV.h[0m
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/paparazzi
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Generating C++ implementation in directory include/v2.0/common
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ASLUAV.xml
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ASLUAV.xml
Found 158 MAVLink message types in 2 XML files
Generating C implementation in directory include/v1.0/slugs
Note: message ASLCTRL_DATA is longer than 64 bytes long (106 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FW_SOARING_DATA is longer than 64 bytes long (110 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Generating C implementation in directory include/v1.0/common
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/autoquad
Generating C++ implementation in directory include/v2.0/common
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Copying fixed C++ headers for protocol 2.0 to include/v2.0
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[ 80%] Built target paparazzi.xml-v2.0
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
[35m[1mScanning dependencies of target autoquad.xml-v1.0[0m
Found 150 MAVLink message types in 2 XML files
Generating C implementation in directory include/v1.0/ASLUAV
[ 85%] [34m[1mGenerating include/v1.0/autoquad/autoquad.h[0m
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/ualberta
Generating C++ implementation in directory include/v2.0/common
Copying fixed headers for protocol 1.0 to include/v1.0
Generating C implementation in directory include/v1.0/common
[ 85%] Built target paparazzi.xml-v1.0
[35m[1mScanning dependencies of target common.xml-v1.0[0m
Copying fixed C++ headers for protocol 2.0 to include/v2.0
[ 90%] Built target common.xml-v1.0
[35m[1mScanning dependencies of target ualberta.xml-v1.0[0m
[ 95%] [34m[1mGenerating include/v1.0/ualberta/ualberta.h[0m
[ 95%] Built target autoquad.xml-v2.0
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/matrixpilot
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/autoquad.xml
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/autoquad.xml
Note: message AQ_TELEMETRY_F is longer than 64 bytes long (90 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Copying fixed C++ headers for protocol 2.0 to include/v2.0
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Generating C++ implementation in directory include/v2.0/common
[ 95%] Built target ualberta.xml-v2.0
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ualberta.xml
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/ualberta.xml
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Merged enum MAV_CMD
Merged enum MAV_DATA_STREAM
Note: An enum value was auto-generated: AQ_MAVLINK_DEFS_VERSION_1 = 1
Note: An enum value was auto-generated: MAV_DATA_STREAM_PROPULSION = 13
Found 140 MAVLink message types in 2 XML files
Generating C implementation in directory include/v1.0/autoquad
Copying fixed headers for protocol 1.0 to include/v1.0
Copying fixed C++ headers for protocol 2.0 to include/v2.0
Generating C implementation in directory include/v1.0/common
[ 95%] Built target slugs.xml-v1.0
[ 95%] Built target matrixpilot.xml-v2.0
Ignoring MAVLink2 message SETUP_SIGNING
Ignoring MAVLink2 message BUTTON_CHANGE
Ignoring MAVLink2 message PLAY_TUNE
Ignoring MAVLink2 message CAMERA_INFORMATION
Ignoring MAVLink2 message CAMERA_SETTINGS
Ignoring MAVLink2 message STORAGE_INFORMATION
Ignoring MAVLink2 message CAMERA_CAPTURE_STATUS
Ignoring MAVLink2 message CAMERA_IMAGE_CAPTURED
Ignoring MAVLink2 message FLIGHT_INFORMATION
Ignoring MAVLink2 message MOUNT_ORIENTATION
Ignoring MAVLink2 message LOGGING_DATA
Ignoring MAVLink2 message LOGGING_DATA_ACKED
Ignoring MAVLink2 message LOGGING_ACK
Ignoring MAVLink2 message VIDEO_STREAM_INFORMATION
Ignoring MAVLink2 message SET_VIDEO_STREAM_SETTINGS
Ignoring MAVLink2 message WIFI_CONFIG_AP
Ignoring MAVLink2 message PROTOCOL_VERSION
Ignoring MAVLink2 message UAVCAN_NODE_STATUS
Ignoring MAVLink2 message UAVCAN_NODE_INFO
Ignoring MAVLink2 message PARAM_EXT_REQUEST_READ
Ignoring MAVLink2 message PARAM_EXT_REQUEST_LIST
Ignoring MAVLink2 message PARAM_EXT_VALUE
Ignoring MAVLink2 message PARAM_EXT_SET
Ignoring MAVLink2 message PARAM_EXT_ACK
Ignoring MAVLink2 message OBSTACLE_DISTANCE
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[35m[1mScanning dependencies of target common.xml-v2.0[0m
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
[100%] [34m[1mGenerating common-v2.0-cxx-stamp[0m
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: An enum value was auto-generated: MODE_MANUAL_DIRECT = 1
Note: An enum value was auto-generated: MODE_MANUAL_SCALED = 2
Note: An enum value was auto-generated: MODE_AUTO_PID_ATT = 3
Note: An enum value was auto-generated: MODE_AUTO_PID_VEL = 4
Note: An enum value was auto-generated: MODE_AUTO_PID_POS = 5
Note: An enum value was auto-generated: NAV_AHRS_INIT = 1
Note: An enum value was auto-generated: NAV_AHRS = 2
Note: An enum value was auto-generated: NAV_INS_GPS_INIT = 3
Note: An enum value was auto-generated: NAV_INS_GPS = 4
Note: An enum value was auto-generated: PILOT_MANUAL = 1
Note: An enum value was auto-generated: PILOT_AUTO = 2
Note: An enum value was auto-generated: PILOT_ROTO = 3
Found 141 MAVLink message types in 2 XML files
Generating C implementation in directory include/v1.0/ualberta
Generating C implementation in directory include/v1.0/common
Validating /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
Copying fixed headers for protocol 1.0 to include/v1.0
Parsing /home/pratyush/git/px4_data_collection/catkin_ws/src/mavlink/message_definitions/v1.0/common.xml
[100%] Built target ASLUAV.xml-v1.0
Note: message GPS_STATUS is longer than 64 bytes long (109 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ATTITUDE_QUATERNION_COV is longer than 64 bytes long (80 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GLOBAL_POSITION_INT_COV is longer than 64 bytes long (189 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOCAL_POSITION_NED_COV is longer than 64 bytes long (233 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_ACTUATOR_CONTROLS is longer than 64 bytes long (89 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIGHRES_IMU is longer than 64 bytes long (70 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_SENSOR is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SIM_STATE is longer than 64 bytes long (92 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FILE_TRANSFER_PROTOCOL is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HIL_STATE_QUATERNION is longer than 64 bytes long (72 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOG_DATA is longer than 64 bytes long (105 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INJECT_DATA is longer than 64 bytes long (121 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SERIAL_CONTROL is longer than 64 bytes long (87 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message ENCAPSULATED_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message RESOURCE_REQUEST is longer than 64 bytes long (251 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message FOLLOW_TARGET is longer than 64 bytes long (101 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CONTROL_SYSTEM_STATE is longer than 64 bytes long (108 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message AUTOPILOT_VERSION is longer than 64 bytes long (86 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LANDING_TARGET is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_INPUT is longer than 64 bytes long (71 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message GPS_RTCM_DATA is longer than 64 bytes long (190 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message HOME_POSITION is longer than 64 bytes long (68 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_HOME_POSITION is longer than 64 bytes long (69 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message V2_EXTENSION is longer than 64 bytes long (262 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_INFORMATION is longer than 64 bytes long (243 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message CAMERA_IMAGE_CAPTURED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message LOGGING_DATA_ACKED is longer than 64 bytes long (263 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message VIDEO_STREAM_INFORMATION is longer than 64 bytes long (254 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message SET_VIDEO_STREAM_SETTINGS is longer than 64 bytes long (255 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message WIFI_CONFIG_AP is longer than 64 bytes long (104 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message UAVCAN_NODE_INFO is longer than 64 bytes long (124 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_VALUE is longer than 64 bytes long (157 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_SET is longer than 64 bytes long (155 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message PARAM_EXT_ACK is longer than 64 bytes long (154 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Note: message OBSTACLE_DISTANCE is longer than 64 bytes long (166 bytes), which can cause fragmentation since many radio modems use 64 bytes as maximum air transfer unit.
Found 163 MAVLink message types in 1 XML files
Generating C headers
Generating C implementation in directory include/v2.0/common
Copying fixed headers for protocol 1.0 to include/v1.0
[100%] Built target autoquad.xml-v1.0
Copying fixed headers for protocol 1.0 to include/v1.0
[100%] Built target ualberta.xml-v1.0
Copying fixed headers for protocol 2.0 to include/v2.0
Generating C++ implementation in directory include/v2.0/common
Copying fixed C++ headers for protocol 2.0 to include/v2.0
[100%] Built target common.xml-v2.0
